// <auto-generated />
using System;
using HouseService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HouseService.Migrations
{
    [DbContext(typeof(HouseDbContext))]
    [Migration("20250926124220_AddOutboxEvent")]
    partial class AddOutboxEvent
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("HouseService.Entities.OutboxEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("EventData")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EventType")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<bool>("IsPublished")
                        .HasColumnType("boolean");

                    b.Property<string>("LastError")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<DateTime?>("PublishedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("RetryCount")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("IsPublished", "CreatedAt");

                    b.ToTable("OutboxEvents");
                });

            modelBuilder.Entity("HouseService.Models.House", b =>
                {
                    b.Property<int>("HouseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("HouseId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Area")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("HouseId");

                    b.ToTable("Houses");

                    b.HasData(
                        new
                        {
                            HouseId = 1,
                            Address = "123 Elm Street",
                            Area = 250.5m,
                            Name = "Modern Villa"
                        },
                        new
                        {
                            HouseId = 2,
                            Address = "456 Oak Avenue",
                            Area = 85.0m,
                            Name = "Cozy Apartment"
                        },
                        new
                        {
                            HouseId = 3,
                            Address = "789 Pine Road",
                            Area = 180.7m,
                            Name = "Family Home"
                        });
                });

            modelBuilder.Entity("HouseService.Models.Room", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RoomId"));

                    b.Property<decimal>("Area")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric(10,2)");

                    b.Property<int>("HouseId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Placement")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("RoomId");

                    b.HasIndex("HouseId");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            RoomId = 1,
                            Area = 25.5m,
                            HouseId = 1,
                            Name = "Living Room",
                            Placement = "Ground Floor",
                            Type = "Living"
                        },
                        new
                        {
                            RoomId = 2,
                            Area = 30.0m,
                            HouseId = 1,
                            Name = "Master Bedroom",
                            Placement = "First Floor",
                            Type = "Bedroom"
                        },
                        new
                        {
                            RoomId = 3,
                            Area = 15.5m,
                            HouseId = 2,
                            Name = "Kitchen",
                            Placement = "Main Level",
                            Type = "Kitchen"
                        },
                        new
                        {
                            RoomId = 4,
                            Area = 20.7m,
                            HouseId = 3,
                            Name = "Office",
                            Placement = "Second Floor",
                            Type = "Office"
                        });
                });

            modelBuilder.Entity("HouseService.Models.Room", b =>
                {
                    b.HasOne("HouseService.Models.House", null)
                        .WithMany()
                        .HasForeignKey("HouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
