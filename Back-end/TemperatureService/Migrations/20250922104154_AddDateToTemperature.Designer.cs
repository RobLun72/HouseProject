// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TemperatureService.Data;

#nullable disable

namespace TemperatureService.Migrations
{
    [DbContext(typeof(TemperatureDbContext))]
    [Migration("20250922104154_AddDateToTemperature")]
    partial class AddDateToTemperature
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TemperatureService.Entities.House", b =>
                {
                    b.Property<int>("HouseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("HouseId"));

                    b.Property<double>("Area")
                        .HasPrecision(10, 2)
                        .HasColumnType("double precision");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("HouseId");

                    b.ToTable("Houses");

                    b.HasData(
                        new
                        {
                            HouseId = 1,
                            Area = 150.5,
                            Name = "Family Home"
                        },
                        new
                        {
                            HouseId = 2,
                            Area = 85.200000000000003,
                            Name = "Vacation House"
                        });
                });

            modelBuilder.Entity("TemperatureService.Entities.Room", b =>
                {
                    b.Property<int>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RoomId"));

                    b.Property<double>("Area")
                        .HasPrecision(10, 2)
                        .HasColumnType("double precision");

                    b.Property<int>("HouseId")
                        .HasColumnType("integer");

                    b.Property<string>("Placement")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("RoomId");

                    b.HasIndex("HouseId");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            RoomId = 1,
                            Area = 25.0,
                            HouseId = 1,
                            Placement = "Living Room"
                        },
                        new
                        {
                            RoomId = 2,
                            Area = 15.5,
                            HouseId = 1,
                            Placement = "Bedroom"
                        },
                        new
                        {
                            RoomId = 3,
                            Area = 12.0,
                            HouseId = 1,
                            Placement = "Kitchen"
                        },
                        new
                        {
                            RoomId = 4,
                            Area = 20.0,
                            HouseId = 2,
                            Placement = "Living Room"
                        },
                        new
                        {
                            RoomId = 5,
                            Area = 18.0,
                            HouseId = 2,
                            Placement = "Bedroom"
                        });
                });

            modelBuilder.Entity("TemperatureService.Temperature", b =>
                {
                    b.Property<int>("TempId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TempId"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("Degrees")
                        .HasPrecision(5, 2)
                        .HasColumnType("double precision");

                    b.Property<int>("Hour")
                        .HasColumnType("integer");

                    b.Property<int>("RoomId")
                        .HasColumnType("integer");

                    b.HasKey("TempId");

                    b.HasIndex("RoomId", "Hour")
                        .IsUnique();

                    b.ToTable("Temperatures");

                    b.HasData(
                        new
                        {
                            TempId = 1,
                            Date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Degrees = 22.5,
                            Hour = 8,
                            RoomId = 1
                        },
                        new
                        {
                            TempId = 2,
                            Date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Degrees = 24.0,
                            Hour = 12,
                            RoomId = 1
                        },
                        new
                        {
                            TempId = 3,
                            Date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Degrees = 23.199999999999999,
                            Hour = 18,
                            RoomId = 1
                        },
                        new
                        {
                            TempId = 4,
                            Date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Degrees = 20.800000000000001,
                            Hour = 8,
                            RoomId = 2
                        },
                        new
                        {
                            TempId = 5,
                            Date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Degrees = 25.5,
                            Hour = 12,
                            RoomId = 2
                        },
                        new
                        {
                            TempId = 6,
                            Date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Degrees = 19.699999999999999,
                            Hour = 14,
                            RoomId = 3
                        });
                });

            modelBuilder.Entity("TemperatureService.Entities.Room", b =>
                {
                    b.HasOne("TemperatureService.Entities.House", "House")
                        .WithMany("Rooms")
                        .HasForeignKey("HouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("House");
                });

            modelBuilder.Entity("TemperatureService.Temperature", b =>
                {
                    b.HasOne("TemperatureService.Entities.Room", null)
                        .WithMany("Temperatures")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TemperatureService.Entities.House", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("TemperatureService.Entities.Room", b =>
                {
                    b.Navigation("Temperatures");
                });
#pragma warning restore 612, 618
        }
    }
}
